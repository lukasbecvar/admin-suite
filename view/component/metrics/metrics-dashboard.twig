{% extends 'common/layout.twig' %}

{# METRICS-DASHBOARD COMPONENT #}
{% block component %}
{# SUB-NAVIGATION #}
<div class="sub-navigation border-b border-neutral-800 text-white breadcrumb bg-gradient-to-b from-zinc-900/40 to-zinc-950/40 backdrop-blur supports-[backdrop-filter]:bg-zinc-900/50">
    <a href={{ path('app_dashboard') }} class="border border-neutral-600 font-bold px-1 py-0 rounded mr-2 text-white hover:bg-neutral-700" title="Back to dashboard">
        <i class="fa fa-arrow-left" aria-hidden="true"></i>
    </a>

    {# LINK TO MONITORING #}
    <a href={{ path('app_manager_monitoring') }} class="border border-neutral-600 font-bold px-1 py-0 rounded ml-1 text-white hover:bg-neutral-700" title="Go to monitoring">
        <i class="fa fa-eye" aria-hidden="true"></i>
    </a>

    {# AGGREGATE METRICS BUTTON #}
    <button id="aggregateButton" class="border border-neutral-600 font-bold px-1 py-0 rounded ml-1 text-white hover:bg-neutral-700" title="Aggregate old metrics">
        <i class="fa fa-compress" aria-hidden="true"></i>
    </button>

    {# METRICS TIME PERIOD SELECTOR #}
    <span class="mr-1"></span>
    <span>
        <label for="time-period" class="text-white">Time period:</label>
        <select id="time-period" onchange="updateTimePeriod()" class="bg-neutral-800 text-white border border-neutral-600 rounded">
            <option value="raw_metrics">{% if metricsSaveInterval == 60 %}Last hour{% else %}Last {{ metricsSaveInterval }} minutes{% endif %}</option>
            <option value="last_24_hours" selected>Last 24 hours</option>
            <option value="last_week">Last week</option>
            <option value="last_month">Last month</option>
            <option value="all_time">All time</option>
        </select>

        <script>
            // update time period in url
            function updateTimePeriod() {
                const select = document.getElementById('time-period');
                const selectedValue = select.value;
                window.location.search = `?time_period=${selectedValue}`;
            }

            // select selecton value from url
            function setSelectedValue() {
                const urlParams = new URLSearchParams(window.location.search);
                const timePeriod = urlParams.get('time_period');
                const select = document.getElementById('time-period');

                // set selected value
                if (timePeriod) {
                    select.value = timePeriod;
                }
            }

            // init select value
            window.onload = setSelectedValue;
        </script>
    </span>
</div>

{# METRICS-CARDS #}
<div class="p-2 space-y-2 metrics-component">
    {# CURRENT USAGE CARD #}
    <div class="flex flex-col md:flex-row gap-4">
        <div class="w-full rounded border border-white/10 bg-neutral-400/5 backdrop-blur-lg shadow-2xl text-white overflow-hidden">
            <div class="px-3 py-2 border-b border-white/10 font-semibold tracking-wide text-sm uppercase text-white/80 flex items-center gap-2">
                Current usage
            </div>
            <div class="grid grid-cols-3 divide-y sm:divide-y-0 sm:divide-x divide-white/10">
                <div class="flex flex-col items-center justify-center p-2 bg-gradient-to-br from-red-500/40 to-red-800/20">
                    <span class="text-white/70 text-sm font-medium tracking-wide">CPU</span>
                    <span class="text-white text-2xl font-bold mt-1">{{ current_usages.cpu|e }}%</span>
                </div>
                <div class="flex flex-col items-center justify-center p-2 bg-gradient-to-br from-blue-500/40 to-blue-800/20">
                    <span class="text-white/70 text-sm font-medium tracking-wide">RAM</span>
                    <span class="text-white text-2xl font-bold mt-1">{{ current_usages.ram|e }}%</span>
                </div>
                <div class="flex flex-col items-center justify-center p-2 bg-gradient-to-br from-emerald-500/40 to-emerald-800/20">
                    <span class="text-white/70 text-sm font-medium tracking-wide">Storage</span>
                    <span class="text-white text-2xl font-bold mt-1">{{ current_usages.storage|e }}%</span>
                </div>
            </div>
        </div>
    </div>

    {# USAGE HISTORY CHARTS #}
    {% if data.metrics is empty and showRawMetrics %}
        <div class="flex items-center justify-center mt-10 mb-10">
            <div class="p-4 rounded-md bg-neutral-800/50 border border-neutral-700 text-white text-center">
                <p class="text-xl font-bold mb-2">No raw metrics found in cache</p>
                <p class="text-sm opacity-80">Raw metrics will appear here once the monitoring process collects some data.</p>
            </div>
        </div>
    {% elseif data.metrics is empty %}
        <div class="flex items-center justify-center mt-10 mb-10">
            <div class="p-4 rounded-md bg-neutral-800/50 border border-neutral-700 text-white text-center">
                <p class="text-xl font-bold mb-2">No metrics found</p>
                <p class="text-sm opacity-80">Metrics will appear here once the monitoring process collects and saves some data.</p>
            </div>
        </div>
    {% else %}
        {% for metricName, metricData in data.metrics %}
            <div class="flex flex-col md:flex-row gap-2">
                <div class="flex-1 p-0 shadow-lg rounded relative chart-container backdrop-blur-md bg-neutral-400/5 border border-white/15">
                    <div class="px-3 py-[8px] border-b border-white/10 text-white font-bold text-sm flex items-center justify-between mb-1">
                        {{ metricName | replace({'_': ' '}) | capitalize }} {% if showRawMetrics %}(raw data - {% if metricsSaveInterval == 60 %}last hour{% else %}last {{ metricsSaveInterval }} minutes{% endif %}){% else %}(history){% endif %}
                        {% if not showRawMetrics %}
                        <button class="deleteButton text-indigo-400 hover:text-indigo-300 text-l" data-metric-name={{ metricName|e }} data-service-name="host-system" data-referer="app_metrics_dashboard">
                            delete
                        </button>
                        {% endif %}
                    </div>
                    <div id="{{ (metricName ~ '-' ~ 'default')|replace({'.': '_', ' ': '_'}) }}-line"></div>
                </div>
            </div>
        {% endfor %}
    {% endif %}
</div>

{# SEND METRICS DATA TO CHARTS JS #}
<script>
    window.metricsData = {{ { categories: data.categories, metrics: data.metrics, serviceName: 'host-system', percentage: true } | json_encode | raw }};
</script>

{# DELETE CONFIRMATION POPUP #}
{% include "component/metrics/popup/delete-confirmation-popup.twig" %}
{{ encore_entry_script_tags('metrics-delete-confirmaton-js') }}

{# AGGREGATE CONFIRMATION POPUP #}
{% include "component/metrics/popup/aggregate-confirmation-popup.twig" %}
{{ encore_entry_script_tags('metrics-aggregate-confirmation-js') }}

{# INCLUDE CHARTS SCRIPT #}
{{ encore_entry_script_tags('metrics-charts-js') }}
{% endblock %}
