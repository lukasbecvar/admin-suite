{% extends 'common/layout.twig' %}

{% block component %}
{# SUB-NAVIGATION #}
<div class="bg-neutral-900 border-b border-neutral-700 sub-navigation breadcrumb">
    <a href={{ path('app_dashboard') }} class="border border-gray-600 font-bold px-1 text-white">
        <i class="fa fa-arrow-left" aria-hidden="true"></i>
    </a>
    <span class="mr-1 text-white">Filesystem</span>
</div>

{# FILESYSTEM BROWSER #}
<div id="file-system-manager">
    <div class="p-1 card-color border-b border-neutral-700 shadow flex items-center space-x-2">
        <span class="text-sm font-medium text-gray-300">Path: </span>
        <span id="breadcrumb" class="text-sm text-gray-100"></span>
    </div>

    {# FILES LIST TABLE #}
    <div id="file-list-section" class="overflow-auto">
        <table class="min-w-full">
            <thead class="card-color border-b border-gray-600">
                <tr>
                    <th scope="col" class="text-white px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">
                        Name
                    </th>
                    <th scope="col" class="text-white px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">
                        Size
                    </th>
                    <th scope="col" class="text-white px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">
                        Permissions
                    </th>
                </tr>
            </thead>
            <tbody id="file-system-list" class="card-color"></tbody>
        </table>
    </div>

    {# FILE CONTENT #}
    <div id="file-content-section" class="hidden p-2 card-color shadow-md overflow-auto">
        <div class="flex justify-between items-center">
            <h3 class="text-lg font-medium text-gray-100" id="file-name"></h3>
            <button onclick="closeFile()" class="mr-2 text-2xl text-gray-100 hover:text-green-400">
                <i class="fa fa-times" aria-hidden="true"></i>
            </button>
        </div>
        <pre id="file-content" class="text-sm text-cyan card-color p-4 rounded mt-4 overflow-auto" style="height: calc(100% - 50px);"></pre>
    </div>
</div>
</div>

{# FILE SYSTEM BROWSER JAVASCRIPT #}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const path = '{{ currentPath }}';
        loadFileSystem(path);
    });

    // load file system list
    function loadFileSystem(path) {
        fetch(`{{ path('app_file_system_list') }}?path=${encodeURIComponent(path)}`)
            .then(response => response.json())
            .then(data => {
                const fileList = document.getElementById('file-system-list');
                fileList.innerHTML = '';
                data.forEach(file => {
                    const row = document.createElement('tr');
                    row.classList.add('hover:bg-neutral-700', 'cursor-pointer');
                    row.innerHTML = `
                        <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-100 border-b border-neutral-700">${file.is_dir ? `<strong>${file.name}</strong>` : file.name}</td>
                        <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-100 border-b border-neutral-700">${file.size}</td>
                        <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-100 border-b border-neutral-700">${file.permissions}</td>
                    `;
                    row.addEventListener('click', () => {
                        if (file.is_dir) {
                            loadFileSystem(file.path);
                        } else {
                            fetchDetail(file.path);
                        }
                    });
                    fileList.appendChild(row);
                });

                // update breadcrumb navigation
                updateBreadcrumb(path);
            });
    }

    // fetch file file details
    function fetchDetail(path) {
        fetch(`{{ path('app_file_system_detail') }}?path=${encodeURIComponent(path)}`)
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    alert(data.error);
                } else {
                    document.getElementById('file-name').textContent = data.name;
                    document.getElementById('file-content').textContent = data.content;
                    document.getElementById('file-list-section').classList.add('hidden');
                    document.getElementById('file-content-section').classList.remove('hidden');
                }
            });
    }

    // close file content view
    function closeFile() {
        document.getElementById('file-content-section').classList.add('hidden');
        document.getElementById('file-list-section').classList.remove('hidden');
    }

    // update breadcrumb navigation
    function updateBreadcrumb(path) {
        const breadcrumb = document.getElementById('breadcrumb');
        const parts = path.split('/').filter(part => part);
        breadcrumb.innerHTML = '';
        let currentPath = '';
        if (path === '/') {
            breadcrumb.innerHTML = '<span class="cursor-pointer hover:underline text-blue-500" onclick="loadFileSystem(\'/\')">/base</span>';
        } else {
            breadcrumb.innerHTML = '<span class="cursor-pointer hover:underline text-blue-500" onclick="loadFileSystem(\'/\')">/base</span>/';
            parts.forEach((part, index) => {
                currentPath += `/${part}`;
                const span = document.createElement('span');
                span.classList.add('cursor-pointer', 'hover:underline', 'text-blue-500');
                span.onclick = () => {
                    loadFileSystem(currentPath);
                }
                span.textContent = part;
                span.addEventListener('click', () => {
                    loadFileSystem(currentPath);
                });
                breadcrumb.appendChild(span);
                if (index < parts.length - 1) {
                    breadcrumb.innerHTML += '/';
                }
            });
        }
    }
</script>
{% endblock %}
