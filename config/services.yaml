services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # automatically injects dependencies in your services.
        autoconfigure: true # automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # twig extensions
    # --------------------------------------------------------------------------------- #
    # linkify extension
    App\Twig\LinkifyExtension:
        tags:
            - { name: 'twig.extension' }

    # auth manager extension
    App\Twig\AuthManagerExtension:
        arguments:
            $authManager: '@App\Manager\AuthManager'
        tags: [ 'twig.extension' ]

    # todo manager extension
    App\Twig\TodoManagerExtension:
        arguments:
            $todoManager: '@App\Manager\TodoManager'
        tags: [ 'twig.extension' ]

    # error handeling controller for app exception
    # --------------------------------------------------------------------------------- #
    Symfony\Component\HttpKernel\EventListener\ErrorListener:
        arguments:
            $controller: 'App\Controller\ErrorController::show'

    # exception event subscriber
    App\Event\Subscriber\ExceptionEventSubscriber:
        tags:
            - { name: kernel.event_subscriber }

    # app middlewares
    # --------------------------------------------------------------------------------- #
    # resource build check middleware
    App\Middleware\AssetsCheckMiddleware:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', priority: 10 }

    # linux check middleware
    App\Middleware\LinuxCheckMiddleware:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 9 }

    # escape request data
    App\Middleware\EscapeRequestDataMiddleware:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', priority: 8 }

    # database online checker middleware
    App\Middleware\DatabaseOnlineMiddleware:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', priority: 7 }

    # security check middleware
    App\Middleware\SecurityCheckMiddleware:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', priority: 6 }

    # handle maintenance mode middleware
    App\Middleware\MaintenanceMiddleware:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 5 }

    # handle auto-login middleware for remember me
    App\Middleware\AutoLoginMiddleware:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 4 }

    # check if user is authentificated middleware
    App\Middleware\AuthentificatedCheckMiddleware:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 3 }

    # user permissions authorization check middleware
    App\Middleware\AuthorizationMiddleware:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', priority: 2 }

    # user banned check middleware
    App\Middleware\BannedCheckMiddleware:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 1 }
