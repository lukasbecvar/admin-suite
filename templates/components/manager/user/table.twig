{% extends 'common/layout.twig' %}

{% block component %} 
    <div class="bg-neutral-900 border-b border-neutral-700 sub-navigation">
        {% if status_filter == 'online' or status_filter == 'offline' %}
            <a href="{{ path('app_manager_users', {'filter': 'all'}) }}" class="border border-neutral-500 font-bold px-1"><i class="fa fa-arrow-left" aria-hidden="true"></i>
            </a>
        {% endif %}
        <a href="{{ path('app_manager_users_register') }}" class="border border-neutral-500 font-bold px-1"><i class="fa fa-plus" aria-hidden="true"></i>
        </a>
        <a href="#" class="border border-neutral-500 font-bold px-1">RAW</a>

        <span class="mr-1">
            <a href="{{ path('app_manager_users', {'filter': 'online'}) }}">Online</a> 
            {{ online_count }}/{{ total_users_count }}
        </span>
    </div>

    {% if users|length == 0 %}
        <p class="flex items-center justify-center mt-20 mb-20 text-2xl">This user list page is empty</p>
    {% else %}
        <div class="bg-neutral-900 border-b border-neutral-700">
            <table class="min-w-full divide-y divide-white">
                <thead>
                    <tr class="hover:bg-neutral-800 border-b border-neutral-600">
                        <th class="text-left text-white p-2">#</th>
                        <th class="text-left text-white p-2">Username</th>
                        <th class="text-left text-white p-2">Role</th>
                        <th class="text-left text-white p-2">IP Address</th>
                        <th class="text-left text-white p-2">Browser</th>
                        <th class="text-left text-white p-2">OS</th>
                        <th class="text-left text-white p-2">Last Login</th>
                        <th class="text-left text-white p-2">Status</th>
                        <th class="text-left text-white p-2">X</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-white">
                    {% for row in users %}
                        {% set isOnline = false %}
                        {% for onlineUser in online_list %}
                            {% if row.id == onlineUser.id %}
                                {% set isOnline = true %}
                            {% endif %}
                        {% endfor %}
                        {% if isOnline %}
                            {% set currentStatus = 'online' %}
                        {% else %}
                            {% set currentStatus = 'offline' %}
                        {% endif %}

                        {% if status_filter == 'all' or (status_filter != 'all' and status_filter == currentStatus) %}
                            <tr class="hover:bg-neutral-800 border-b border-neutral-600">
                                <td class="text-white p-2 border-b border-neutral-600">{{ row.id }}</td>
                                <td class="text-white p-2 border-b border-neutral-600">{{ row.username }}</td>
                                <td class="text-white p-2 border-b border-neutral-600">
                                    <a href="#" class="role-update-button underline" data-username="{{ row.username }}" data-role="{{ row.role }}" data-id="{{ row.id }}">{{ row.role }}</a>
                                </td>
                                <td class="text-white p-2 border-b border-neutral-600">{{ row.ipAddress }}</td>
                                <td class="text-white p-2 border-b border-neutral-600">{{ visitor_info_util.getBrowserShortify(row.userAgent) }}</td>
                                <td class="text-white p-2 border-b border-neutral-600">{{ visitor_info_util.getOs(row.userAgent) }}</td>
                                <td class="text-white p-2 border-b border-neutral-600">{{ row.lastLoginTime|date('Y-m-d H:i:s') }}</td>
                                <td class="text-white p-2 border-b border-neutral-600">
                                    {{currentStatus}}
                                </td>
                                <td class="text-white p-2 border-b border-neutral-600"><a href="/manager/users/delete?id={{ row.id }}" class="delete-button">X</a></td>
                            </tr>
                        {% endif %}
                    {% endfor %}
                </tbody>
            </table>
        </div>
    {% endif %}

    {% if (total_users_count > limit_per_page) and (users|length != 0) %}
        <div class="mt-2 flex justify-center mb-2">
            <div class="border border-neutral-600 rounded-lg overflow-hidden">
                <ul class="flex">
                    {% set total_pages = (total_users_count / limit_per_page)|round(0, 'ceil') %}
                    {% set previous_page = current_page > 1 ? current_page - 1 : 1 %}
                    {% set next_page = current_page < total_pages ? current_page + 1 : total_pages %}
                    {% set start_page = max(current_page - 2, 1) %}
                    {% set end_page = min(current_page + 2, total_pages) %}
                    <li>
                        <a href="{{ path('app_manager_users', {'page': previous_page}) }}" class="block px-4 py-2 text-white hover:bg-neutral-800 {% if current_page == 1 %}cursor-not-allowed opacity-50{% endif %}" {% if current_page == 1 %}disabled{% endif %}>Previous</a>
                    </li>
                    {% for page in start_page..end_page %}
                        <li>
                            <a href="{{ path('app_manager_users', {'page': page}) }}" class="block px-4 py-2 text-white {% if page == current_page %}bg-neutral-800{% else %}hover:bg-neutral-800{% endif %}">{{ page }}</a>
                        </li>
                    {% endfor %}
                    <li>
                        <a href="{{ path('app_manager_users', {'page': next_page}) }}" class="block px-4 py-2 text-white hover:bg-neutral-800 {% if current_page == total_pages %}cursor-not-allowed opacity-50{% endif %}" {% if current_page == total_pages %}disabled{% endif %}>Next</a>
                    </li>
                </ul>
            </div>
        </div>
    {% endif %}

    {# USER DELETE POPUP OVERLAY #}
    <div id="popup-overlay" class="fixed inset-0 bg-black bg-opacity-70 flex justify-center items-center hidden z-50">
        <div class="bg-neutral-900 rounded-lg p-6 border border-neutral-700">
            <p class="mb-4">Are you sure you want to delete this user?</p>
            <div class="flex justify-end">
                <button id="cancel-button" class="bg-gray-500 text-white px-4 py-2 rounded mr-2 hover:bg-gray-600">No</button>
                <button id="confirm-button" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">Yes</button>
            </div>
        </div>
    </div>

    {# USER ROLE UPDATE POPUP OVERLAY #}
    <div id="role-update-popup-overlay" class="fixed inset-0 bg-black bg-opacity-70 flex justify-center items-center hidden z-50">
        <div class="bg-neutral-900 rounded-lg p-6 border border-neutral-700">
            <p id="role-update-title" class="mb-4">Update User Role: <span id="role-update-username"></span></p>
            <form id="role-update-form" method="POST" action="{{ path('app_manager_users_role_update') }}">
                <input type="hidden" name="id" id="role-update-user-id">
                <input type="hidden" name="current-role" id="current-role">
                <div class="mb-4">
                    <label for="new-role" class="block text-white mb-2">New Role:</label>
                    <input type="text" name="role" id="new-role" class="w-full px-4 py-2 border border-neutral-700 rounded bg-neutral-800 text-white">
                </div>
                <div id="role-error-message" class="text-red-500 mb-4 hidden">The new role must be different from the current role.</div>
                <div class="flex justify-end">
                    <button type="button" id="role-update-cancel-button" class="bg-gray-500 text-white px-4 py-2 rounded mr-2 hover:bg-gray-600">Close</button>
                    <button type="submit" id="role-update-submit-button" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600" disabled>Update</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var deleteButtons = document.querySelectorAll('.delete-button');
            var roleUpdateButtons = document.querySelectorAll('.role-update-button');
            var deletePopupOverlay = document.getElementById('popup-overlay');
            var roleUpdatePopupOverlay = document.getElementById('role-update-popup-overlay');
            var confirmDeleteButton = document.getElementById('confirm-button');
            var cancelButton = document.getElementById('cancel-button');
            var roleUpdateCancelButton = document.getElementById('role-update-cancel-button');
            var roleUpdateSubmitButton = document.getElementById('role-update-submit-button');
            var roleUpdateForm = document.getElementById('role-update-form');

            // Function to show role update popup
            function showRoleUpdatePopup(username, currentRole, userId) {
                document.getElementById('role-update-username').textContent = username;
                document.getElementById('current-role').value = currentRole;
                document.getElementById('role-update-user-id').value = userId;
                document.getElementById('new-role').value = ''; // Clear input field
                document.getElementById('role-error-message').classList.add('hidden');
                roleUpdatePopupOverlay.classList.remove('hidden');
            }

            // Event listeners for delete buttons
            deleteButtons.forEach(function(button) {
                button.addEventListener('click', function(event) {
                    event.preventDefault();
                    deletePopupOverlay.classList.remove('hidden');
                });
            });

            // Event listener for cancel delete button
            cancelButton.addEventListener('click', function() {
                deletePopupOverlay.classList.add('hidden');
            });

            // Event listeners for role update buttons
            roleUpdateButtons.forEach(function(button) {
                button.addEventListener('click', function(event) {
                    event.preventDefault();
                    var username = button.getAttribute('data-username');
                    var currentRole = button.getAttribute('data-role');
                    var userId = button.getAttribute('data-id');
                    showRoleUpdatePopup(username, currentRole, userId);
                });
            });

            // Event listener for role update cancel button
            roleUpdateCancelButton.addEventListener('click', function() {
                roleUpdatePopupOverlay.classList.add('hidden');
            });

            // Event listener for new role input change
            document.getElementById('new-role').addEventListener('input', function() {
                var currentRole = document.getElementById('current-role').value;
                var newRole = this.value.trim();
                if (newRole.toUpperCase() !== currentRole) {
                    roleUpdateSubmitButton.removeAttribute('disabled');
                } else {
                    roleUpdateSubmitButton.setAttribute('disabled', 'disabled');
                }
            });

            // Form submit event listener for role update
            roleUpdateForm.addEventListener('submit', function(event) {
                var currentRole = document.getElementById('current-role').value;
                var newRole = document.getElementById('new-role').value.trim();
                if (newRole === currentRole) {
                    event.preventDefault(); // Prevent form submission
                    document.getElementById('role-error-message').classList.remove('hidden');
                }
            });
        });
    </script>
{% endblock %}
